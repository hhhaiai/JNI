apply plugin: 'com.android.application'

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId 'com.example.hellojni'
        minSdkVersion 23
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        externalNativeBuild {
            cmake {
                abiFilters "armeabi", "armeabi-v7a", "arm64-v8a", "x86", "x86_64"
//            cppFlags "-std=c++14"
//            arguments '-DANDROID_STL=c++_static'
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'),
                    'proguard-rules.pro'
        }
    }
    externalNativeBuild {
        cmake {
            version '3.6.0'
            path "src/main/cpp/CMakeLists.txt"
        }
    }

//    // 多渠道
//    flavorDimensions 'cpuArch'
//    productFlavors {
//        arm7 {
//            dimension 'cpuArch'
//            ndk {
//                abiFilter 'armeabi-v7a'
//            }
//        }
//        arm8 {
//            dimension 'cpuArch'
//            ndk {
//                abiFilters 'arm64-v8a'
//            }
//        }
//        x86 {
//            dimension 'cpuArch'
//            ndk {
//                abiFilter 'x86'
//            }
//        }
//        x86_64 {
//            dimension 'cpuArch'
//            ndk {
//                abiFilter 'x86_64'
//            }
//        }
//        universal {
//            dimension 'cpuArch'
//            // include all default ABIs. with NDK-r16,  it is:
//            //   armeabi-v7a, arm64-v8a, x86, x86_64
//        }
//    }
    dexOptions {
        preDexLibraries false
        maxProcessCount 8
        javaMaxHeapSize "4g"
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    aaptOptions {
        cruncherEnabled = false
        useNewCruncher = false
    }
    lintOptions {
        checkReleaseBuilds false
        abortOnError false
        warningsAsErrors false
        disable "UnusedResources", 'RestrictedApi'
        textOutput "stdout"
        textReport false
        check 'NewApi', 'InlinedApi'
    }
}

tasks.withType(Javadoc) {
    options.addStringOption('Xdoclint:none', '-quiet')
    options.addStringOption('encoding', 'UTF-8')
    options.addStringOption('charSet', 'UTF-8')
}


dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
}
